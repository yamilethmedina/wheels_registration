{"filter":false,"title":"wheels_mailer_test.rb","tooltip":"/test/mailers/wheels_mailer_test.rb","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["class WheelsMailerTest < ActionMailer::TestCase","  # test \"the truth\" do","  #   assert true","  # end","end",""]},{"start":{"row":2,"column":0},"end":{"row":15,"column":3},"action":"insert","lines":["class UserMailerTest < ActionMailer::TestCase","  test \"invite\" do","    # Send the email, then test that it got queued","    email = UserMailer.create_invite('me@example.com',","                                     'friend@example.com', Time.now).deliver","    assert_not ActionMailer::Base.deliveries.empty?"," ","    # Test the body of the sent email contains what we expect it to","    assert_equal ['me@example.com'], email.from","    assert_equal ['friend@example.com'], email.to","    assert_equal 'You have been invited by me@example.com', email.subject","    assert_equal read_fixture('invite').join, email.body.to_s","  end","end"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":28},"end":{"row":4,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430514813248,"hash":"72a623113e6051c3201b03475f06e246bd9846e1"}